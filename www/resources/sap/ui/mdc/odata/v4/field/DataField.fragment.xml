<!--
    /**
     * This fragment renders a DataField
     * @param entitySet context to the EntitySet
     * @param dataField context to the DataField
     * @param property context to the Property Path
     * @returns
     */
-->

<core:FragmentDefinition xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
						 xmlns="sap.m"
						 xmlns:u="sap.ui.unified"
						 xmlns:core="sap.ui.core"
						 xmlns:mdcBase="sap.ui.mdc.base"
						 xmlns:info="sap.ui.mdc.base.info"
						 xmlns:flpInfo="sap.ui.mdc.flp.info"
						 template:require="{
							MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
							COMMON: 'sap/ui/mdc/odata/v4/CommonHelper',
							FIELD: 'sap/ui/mdc/odata/v4/field/FieldHelper'
						 }">

	<template:with path="property>$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement" var="textArrangement">
		<mdcBase:Field
			value="{property>@@FIELD.value}"
			editMode="{ parts: [{path: 'property>$Path'},{path: 'dataField>$Type'},{path:'entitySet>@com.sap.vocabularies.Common.v1.DraftRoot'},{path : 'this>editMode'}] ,formatter: 'FIELD.getEditMode' }"
			width="100%"
			fieldHelp="FVH::{entitySet>@sapui.name}::{this>idPrefix}::{property>$Path@@COMMON.replaceSpecialCharsInId}"
			required="{property>$Path@com.sap.vocabularies.Common.v1.FieldControl@@FIELD.getRequiredForDataField}"
			additionalValue="{= !(${property>$Path@Org.OData.Measures.V1.ISOCurrency}) ? ${property>$Path@@FIELD.buildExpressionForTextValue} : undefined }"
			display="{= ${property>$Path@com.sap.vocabularies.Common.v1.Text} ? ( (${textArrangement>$EnumMember} === 'com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly') ? 'Description' : (${textArrangement>$EnumMember} === 'com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst') ? 'DescriptionValue' : 'ValueDescription') : 'Value'}"
			multipleLines="{= ${property>$Path@com.sap.vocabularies.UI.v1.MultiLineText} }"
			fieldGroupIds="{parts:[{path:'dataField>Value/$Path'}, {path:'entitySet>$Type'}], formatter: 'FIELD.getFieldGroupIds'}"
			change="sap.ui.mdc.odata.v4.field.FieldRuntime.handleChange($event, '{entitySet>$Type}')"
			validateFieldGroup="sap.ui.mdc.odata.v4.field.FieldRuntime.handleSideEffect($event, '{entitySet>$Type}')">
			<mdcBase:dependents>
			<!-- Value Help -->
			<template:if test="{= ${property>$Path@com.sap.vocabularies.Common.v1.ValueListReferences} ||
							${property>$Path@com.sap.vocabularies.Common.v1.ValueListMapping} ||
							${property>$Path@com.sap.vocabularies.Common.v1.ValueList} }">
				<mdcBase:FieldValueHelp id="FVH::{entitySet>@sapui.name}::{this>idPrefix}::{property>$Path@@COMMON.replaceSpecialCharsInId}"
					showConditionPanel="true"
					noDialog="{= ${property>$Path@@MODEL.getValueListType} === 'Fixed'}"
					open="sap.ui.mdc.odata.v4.ValueListHelper.showValueListInfo('/{entitySet>@sapui.name}/{property>$Path}',$\{$source>\},$\{$parameters>/suggestion\}))" >
					<mdcBase:FieldValueHelpMTableWrapper />
				</mdcBase:FieldValueHelp>
			</template:if>
			</mdcBase:dependents>
			<!-- TODO: add one Way Binding to additional Value -->

			<template:if test="{= ${dataField>$Type} === 'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation'}">
				<template:then>
					<mdcBase:fieldInfo>
						<mdcBase:FieldInfo>
							<info:ContentHandler enablePersonalization="false">
								<info:linkHandler>
									<flpInfo:LinkHandler semanticObjects="{dataField>SemanticObject@@MODEL.value}"></flpInfo:LinkHandler>
								</info:linkHandler>
							</info:ContentHandler>
						</mdcBase:FieldInfo>
					</mdcBase:fieldInfo>
				</template:then>

				<template:elseif test="{= ${dataField>$Type} === 'com.sap.vocabularies.UI.v1.DataFieldWithUrl'}">
					<mdcBase:fieldInfo>
						<mdcBase:FieldInfo>
							<info:ContentHandler enablePersonalization="false">
								<info:linkHandler>
									<info:LinkHandler>
										<info:LinkItem text="{dataField>Value@@MODEL.value}" href="{dataField>Url@@MODEL.value}"/>
									</info:LinkHandler>
								</info:linkHandler>
							</info:ContentHandler>
						</mdcBase:FieldInfo>
					</mdcBase:fieldInfo>
				</template:elseif>

				<template:else>
					<!-- in case of semantic key render object identifier -->
					<template:if test="{property>@@FIELD.isLineItem}">
					<template:if test="{path: 'property>', formatter: 'FIELD.isSemanticKey'}">
						<VBox>
							<ObjectIdentifier title="{= ${property>$Path@com.sap.vocabularies.Common.v1.Text} ? ${property>$Path@@FIELD.buildExpressionForTextValue} : (${property>@@MODEL.value} || '{' + ${dataField>@sapui.name} + '}') }"
								text="{= ${property>$Path@com.sap.vocabularies.Common.v1.Text} ? (${property>@@MODEL.value} || '{' + ${dataField>@sapui.name} + '}') : ''}"/>
								<template:if test="{entitySet>@com.sap.vocabularies.Common.v1.DraftRoot}">
									<!-- TODO: temp solution only, try to use the mdc_Link-->
									<ObjectMarker type="{= !%{IsActiveEntity} ? 'Draft' : (%{HasDraftEntity} ? (%{DraftAdministrativeData/InProcessByUser} ? 'Locked' : 'Unsaved') : 'Flagged') }"
										visibility="{= !%{HasDraftEntity} ? 'TextOnly' : 'IconAndText' }"
										class="sapUiTinyMarginBottom"
										press="sap.ui.mdc.odata.v4.field.FieldRuntime.onDraftLinkPressed($event, '{entitySet>@sapui.name}')"
										visible="{= !${IsActiveEntity} || ${HasDraftEntity}}"
										additionalInfo="{path: 'entitySet>$Type', formatter: 'FIELD.getBindingForDraftAdminBlockInline'}"/>
								</template:if>
						</VBox>
					</template:if>
					</template:if>

					<!-- Unit/Currency is not yet supported by MDC control therefore we add it as inner control -->
					<template:if test="{property>$Path@Org.OData.Measures.V1.Unit}">
						<ObjectNumber number="{= ${property>@@MODEL.value} || '{' + ${dataField>@sapui.name} + '}'}" emphasized="false"
									  unit="{property>$Path@Org.OData.Measures.V1.Unit@@MODEL.value}"/>
					</template:if>
					<!-- <template:if test="{property>$Path@Org.OData.Measures.V1.ISOCurrency}"> -->
						<!-- should work with "{path:'$field>value'}", but this is limited to type String -->

						<!-- <u:Currency value="{= ${property>@@MODEL.value} || '{' + ${dataField>@sapui.name} + '}'}"
									currency="{property>$Path@Org.OData.Measures.V1.ISOCurrency@@MODEL.value}"
									useSymbol="false"/>
					</template:if> -->
					<!-- Object Status -->
					<template:if test="{path: 'dataField>Criticality/$Path'}">
						<ObjectStatus
								icon="{=(${dataField>CriticalityRepresentation/$EnumMember} === 'com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon') ? '' : ${path: 'dataField>Criticality/$Path', formatter: 'FIELD.buildExpressionForCriticalityIcon'}}"
								state="{path: 'dataField>Criticality/$Path', formatter: 'FIELD.buildExpressionForCriticalityColor'}"
								text="{= ${property>$Path@com.sap.vocabularies.Common.v1.Text} ? ${property>$Path@@FIELD.buildExpressionForTextValue} : ${property>@@MODEL.value} }"/>
					</template:if>
				</template:else>
			</template:if>

		</mdcBase:Field>

	</template:with>

</core:FragmentDefinition>
